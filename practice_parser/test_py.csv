,global,fuel_up(self),drive(self),read_to_drive(self),check_brand(self),"get_brand(self, car)",main(),
0,[],"[""print('Gas tank is now full.')"", 'self.read_to_drive()']","[""print(f'The {self.model} is now driving.')""]",['self.drive()'],"['Automaker()', 'maker.get_brand(self)', 'print(brand)']","[""print('Car is made from Japansese Automaker')""]","['GraphvizOutput()', 'PyCallGraph(output=graphviz)', ""Vehicle('Honda','Accord', type)"", 'car.check_brand()', 'car.fuel_up()']","[""Vehicle('Honda','Accord', type)"", 'car.check_brand()', 'main()']"
1,,Vehicle,Vehicle,Vehicle,Vehicle,Automaker,,
2,,"def fuel_up(self):        self.fuel_level = self.gas_tank_size
        print('Gas tank is now full.')
        self.read_to_drive()","def drive(self):
        print(f'The {self.model} is now driving.')","def read_to_drive(self):        if(self.fuel_level == self.gas_tank_size):
            self.drive()
            return True
        else:
            return False","def check_brand(self):        maker = Automaker()
        brand = maker.get_brand(self)
        print(brand)","def get_brand(self, car):        if(car.brand == 'Honda'):
            print('Car is made from Japansese Automaker')
            return 'Japan'","def main():    graphviz = GraphvizOutput()
    graphviz.output_file = 'basic.png'

    with PyCallGraph(output=graphviz):
        car = Vehicle('Honda','Accord', type)
        car.check_brand()
        car.fuel_up()",
